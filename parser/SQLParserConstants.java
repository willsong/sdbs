/* Generated By:JavaCC: Do not edit this line. SQLParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface SQLParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int USE = 6;
  /** RegularExpression Id. */
  int SHOW = 7;
  /** RegularExpression Id. */
  int CREATE = 8;
  /** RegularExpression Id. */
  int INSERT = 9;
  /** RegularExpression Id. */
  int UPDATE = 10;
  /** RegularExpression Id. */
  int SELECT = 11;
  /** RegularExpression Id. */
  int EXIT = 12;
  /** RegularExpression Id. */
  int FROM = 13;
  /** RegularExpression Id. */
  int WHERE = 14;
  /** RegularExpression Id. */
  int INTO = 15;
  /** RegularExpression Id. */
  int VALUES = 16;
  /** RegularExpression Id. */
  int SET = 17;
  /** RegularExpression Id. */
  int AND = 18;
  /** RegularExpression Id. */
  int DATABASES = 19;
  /** RegularExpression Id. */
  int DATABASE = 20;
  /** RegularExpression Id. */
  int TABLES = 21;
  /** RegularExpression Id. */
  int TABLE = 22;
  /** RegularExpression Id. */
  int TYPE_INTEGER = 23;
  /** RegularExpression Id. */
  int TYPE_STRING = 24;
  /** RegularExpression Id. */
  int TYPE_DOUBLE = 25;
  /** RegularExpression Id. */
  int STMT_DELIMITER = 26;
  /** RegularExpression Id. */
  int STAR = 27;
  /** RegularExpression Id. */
  int DOT = 28;
  /** RegularExpression Id. */
  int STRING_DELIMITER = 29;
  /** RegularExpression Id. */
  int FIELD_DELIMITER = 30;
  /** RegularExpression Id. */
  int COMP_EQ = 31;
  /** RegularExpression Id. */
  int COMP_GT = 32;
  /** RegularExpression Id. */
  int COMP_GE = 33;
  /** RegularExpression Id. */
  int COMP_LT = 34;
  /** RegularExpression Id. */
  int COMP_LE = 35;
  /** RegularExpression Id. */
  int BRACKET_OPEN = 36;
  /** RegularExpression Id. */
  int BRACKET_CLOSE = 37;
  /** RegularExpression Id. */
  int INTEGER = 38;
  /** RegularExpression Id. */
  int DOUBLE = 39;
  /** RegularExpression Id. */
  int ALPHANUMERIC = 40;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "\"\\r\\n\"",
    "<USE>",
    "<SHOW>",
    "<CREATE>",
    "<INSERT>",
    "<UPDATE>",
    "<SELECT>",
    "<EXIT>",
    "<FROM>",
    "<WHERE>",
    "<INTO>",
    "<VALUES>",
    "<SET>",
    "<AND>",
    "<DATABASES>",
    "<DATABASE>",
    "<TABLES>",
    "<TABLE>",
    "\"INTEGER\"",
    "\"STRING\"",
    "\"DOUBLE\"",
    "\";\"",
    "\"*\"",
    "\".\"",
    "<STRING_DELIMITER>",
    "\",\"",
    "\"=\"",
    "\">\"",
    "\">=\"",
    "\"<\"",
    "\"<=\"",
    "\"(\"",
    "\")\"",
    "<INTEGER>",
    "<DOUBLE>",
    "<ALPHANUMERIC>",
  };

}
